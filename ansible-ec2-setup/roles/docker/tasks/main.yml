---
- name: Install Docker CE (Ubuntu/Debian)
  block:
    - name: Install Docker via snap for Ubuntu 24.04
      snap:
        name: docker
        state: present
        classic: true
      when: ansible_distribution_release == "noble"
      register: docker_snap_result

    - name: Install Docker CE via apt for older Ubuntu versions
      block:
        - name: Install prerequisites
          apt:
            name:
              - ca-certificates
              - curl
            state: present
            update_cache: true

        - name: Create keyrings directory
          file:
            path: /etc/apt/keyrings
            state: directory
            mode: '0755'

        - name: Add Docker's official GPG key
          get_url:
            url: https://download.docker.com/linux/ubuntu/gpg
            dest: /etc/apt/keyrings/docker.asc
            mode: '0644'

        - name: Set correct permissions for Docker GPG key
          file:
            path: /etc/apt/keyrings/docker.asc
            mode: '0644'

        - name: Add Docker repository
          apt_repository:
            repo: "deb [arch={{ ansible_architecture }} signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
            state: present
            filename: docker
            update_cache: true

        - name: Install Docker CE
          apt:
            name:
              - docker-ce
              - docker-ce-cli
              - containerd.io
              - docker-buildx-plugin
              - docker-compose-plugin
            state: present
            update_cache: true
      when: ansible_distribution_release != "noble"

    - name: Display Docker installation method
      debug:
        msg: "Docker installed via {{ 'snap' if docker_snap_result.changed else 'apt' }}"
  when: ansible_os_family == "Debian"

- name: Install Docker CE (RHEL/CentOS/Amazon Linux)
  block:
    - name: Install Docker CE repository
      yum_repository:
        name: docker-ce-stable
        description: Docker CE Stable - $basearch
        baseurl: https://download.docker.com/linux/centos/$releasever/$basearch/stable
        gpgcheck: true
        gpgkey: https://download.docker.com/linux/centos/gpg
        enabled: true

    - name: Install Docker CE
      yum:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present
  when: ansible_os_family == "RedHat"

- name: Start and enable Docker service (snap)
  systemd:
    name: snap.docker.dockerd.service
    state: started
    enabled: true
  when: ansible_distribution_release == "noble"

- name: Start and enable Docker service (apt)
  systemd:
    name: docker
    state: started
    enabled: true
  when: ansible_distribution_release != "noble"

- name: Create docker group (snap)
  group:
    name: docker
    state: present
  when: ansible_distribution_release == "noble"

- name: Add user to docker group (snap)
  user:
    name: "{{ ansible_user }}"
    groups: docker
    append: true
  when: ansible_distribution_release == "noble"

- name: Add user to docker group (apt)
  user:
    name: "{{ ansible_user }}"
    groups: docker
    append: true
  when: ansible_distribution_release != "noble"

- name: Add Jenkins user to docker group
  user:
    name: jenkins
    groups: docker
    append: true
  when: jenkins_user is defined

- name: Create docker daemon configuration (apt only)
  copy:
    dest: /etc/docker/daemon.json
    content: |
      {
        "log-driver": "json-file",
        "log-opts": {
          "max-size": "10m",
          "max-file": "3"
        },
        "storage-driver": "overlay2"
      }
    owner: root
    group: root
    mode: '0644'
  when: ansible_distribution_release != "noble"
  notify: restart docker

- name: Test Docker installation
  command: docker --version
  register: docker_version_output
  changed_when: false

- name: Display Docker version
  debug:
    msg: "{{ docker_version_output.stdout }}"

- name: Test Docker Compose installation
  command: docker-compose --version
  register: docker_compose_version_output
  changed_when: false

- name: Display Docker Compose version
  debug:
    msg: "{{ docker_compose_version_output.stdout }}"

- name: Test Docker functionality
  command: docker ps
  register: docker_ps_output
  changed_when: false

- name: Display Docker test result
  debug:
    msg: "Docker is working correctly"
  when: docker_ps_output.rc == 0
