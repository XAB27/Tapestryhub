---
- name: Install Trivy on EC2
  hosts: ec2_servers
  become: true
  gather_facts: true
  
  pre_tasks:
    - name: Update package cache
      apt:
        update_cache: true
        cache_valid_time: 3600
      when: ansible_os_family == "Debian"
      
    - name: Update package cache (RHEL/CentOS/Amazon Linux)
      yum:
        update_cache: true
      when: ansible_os_family == "RedHat"

  roles:
    - trivy

  post_tasks:
    - name: Display Trivy installation summary
      debug:
        msg: |
          ========================================
          TRIVY INSTALLATION COMPLETE!
          ========================================
          
          Trivy vulnerability scanner installed successfully!
          
          Features:
          - Container image scanning
          - Infrastructure as Code scanning
          - Git repository scanning
          - Software dependency scanning
          
          Usage examples:
          - Scan Docker image: trivy image <image-name>
          - Scan directory: trivy fs <directory>
          - Scan repository: trivy repo <repository-url>
          - Update database: trivy image --download-db-only
          
          ========================================

# ========================================
# TRIVY VULNERABILITY SCANNER PLAYBOOK
# ========================================
#
# This playbook installs Trivy, a comprehensive vulnerability scanner for containers,
# infrastructure as code, and software dependencies.
#
# USAGE:
#   ansible-playbook playbooks/trivy.yml
#
# WHAT GETS INSTALLED:
#   1. Trivy vulnerability scanner
#   2. GPG key and repository setup
#   3. Vulnerability database
#   4. System integration
#
# SCANNING CAPABILITIES:
#   - Container images (Docker, OCI)
#   - Infrastructure as Code (Terraform, CloudFormation)
#   - Git repositories
#   - Software dependencies
#   - Operating system packages
#   - Kubernetes manifests
#
# FEATURES:
#   - Comprehensive vulnerability database
#   - Multiple scanning modes
#   - CI/CD integration
#   - Detailed reporting
#   - Regular database updates
#
# USAGE EXAMPLES:
#   - trivy image nginx:latest
#   - trivy fs /path/to/terraform
#   - trivy repo https://github.com/user/repo
#   - trivy k8s --report summary cluster
#
# VERIFICATION:
#   - trivy --version
#   - trivy image --download-db-only
#   - trivy image hello-world
#
# TROUBLESHOOTING:
#   - If database fails: Run trivy image --download-db-only
#   - If scan fails: Check internet connectivity
#   - If permission denied: Run with sudo
#   - If slow scans: Update vulnerability database
#
# ========================================
